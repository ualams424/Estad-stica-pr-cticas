Y1 = df1[,"SA"]
X1 = df1[,c("VH1","VMB","VT")]
m1 = naiveBayes(X1,Y1)
pred1 = predict(m1, df1[,c("VH1","VMB","VT")])
real1=df1$SA
nconjunta1 = table(pred1, real1)
nSA1 = table(df1$SA)
#a)Probabilidad de que acierte en la predcción de valoración positiva dado que el grupo ha tenido una valoración positiva.
nconjunta1["POSITIVA","POSITIVA"]/nSA1["POSITIVA"]
#b)Probabilidad de que acierte en la predcción de valoración positiva dado que el grupo ha tenido una valoración positiva.
nconjunta1["NEGATIVA","NEGATIVA"]/nSA1["NEGATIVA"]
#d)Probabilidad de que el grupo obtenga una valoración positiva dado que el clasificador predice que va a ser negativa.
n1= nconjunta1["NEGATIVA", "NEGATIVA"] + nconjunta1["NEGATIVA", "POSITIVA"]
nconjunta1["NEGATIVA","POSITIVA"]/n1
#c)Probabilidad de que el grupo obtenga una valoración positiva dado que el clasificador predice que va a ser positiva.
n1_2= nconjunta1["POSITIVA", "POSITIVA"] + nconjunta1["POSITIVA", "NEGATIVA"]
nconjunta1["POSITIVA","POSITIVA"]/n1_2
#Utilizando toda la información disponible de sala, número de miembros, tiempos, número de pistas y liderazgo
df2 = datos[,c("SA","VMB","VH1","VT","VNP","LE")]
df2
Y2 = df2[,"SA"]
X2 = df2[,c("VH1","VMB","VT","VNP","LE")]
m2 = naiveBayes(X2,Y2)
pred2 = predict(m2, df2[,c("VH1","VMB","VT","VNP","LE")])
real2=df2$SA
nconjunta2 = table(pred2, real2)
nSA2 = table(df2$SA)
#a)Probabilidad de que acierte en la predcción de valoración positiva dado que el grupo ha tenido una valoración positiva.
nconjunta2["POSITIVA","POSITIVA"]/nSA2["POSITIVA"]
#b)Probabilidad de que acierte en la predcción de valoración positiva dado que el grupo ha tenido una valoración positiva.
nconjunta2["NEGATIVA","NEGATIVA"]/nSA2["NEGATIVA"]
#d)Probabilidad de que el grupo obtenga una valoración positiva dado que el clasificador predice que va a ser negativa.
n2= nconjunta2["NEGATIVA", "NEGATIVA"] + nconjunta2["NEGATIVA", "POSITIVA"]
nconjunta2["NEGATIVA","POSITIVA"]/n2
#c)Probabilidad de que el grupo obtenga una valoración positiva dado que el clasificador predice que va a ser positiva.
n2_2= nconjunta2["POSITIVA", "POSITIVA"] + nconjunta2["POSITIVA", "NEGATIVA"]
nconjunta2["POSITIVA","POSITIVA"]/n2_2
nconjunta_a["POSITIVA","POSITIVA"]/n_a2
df_a
nconjunta_a
df2 = datos[,c("SA","VMB","VH1","VT","VNP","LE")]
df2
Y2 = df2[,"SA"]
X2 = df2[,c("VH1","VMB","VT","VNP","LE")]
m2 = naiveBayes(X2,Y2)
pred2 = predict(m2, df2[,c("VH1","VMB","VT","VNP","LE")])
real2=df2$SA
nconjunta2 = table(pred2, real2)
nSA2 = table(df2$SA)
nconjunta2
df = datos[,c("SA","VMB","VH1","VP")]
df
#Variable final
Y = df[,"SA"]
#Variable que se utiliza para predecir
X = df[,c("VH1","VMB")]
m = naiveBayes(X,Y)
# Extrae predicciones para evaluar el clasificador
pred = predict(m, df[,c("VH1","VMB")])
# Evaluar capacidad de prediccion del modelo
real=df$SA
nconjunta = table(pred, real)
nSA = table(df$SA)
nconjunta
install.packages("e1071")
datos <- read.csv('datosB2.csv', sep= ";", dec= ",")
datos <- datos[!is.na(datos$TOTAL_SALA),]
datos
#Crea nuevas variables categóricas
datos["VP"] = ifelse(datos$PUNTUACION>2500, "POSITIVA", "NEGATIVA")
datos["SA"] = ifelse(datos$SALA=="A", "POSITIVA", "NEGATIVA")
datos["VH1"] = ifelse(datos$HABITACION1<13, "POSITIVA", "NEGATIVA")
datos["VT"] = ifelse(datos$TOTAL_SALA<50,"POSITIVA", "NEGATIVA")
datos["VMB"] = ifelse(datos$MIEMBROS>5 & datos$MIEMBROS<3, "NEGATIVA", "POSITIVA")
datos["VNP"] = ifelse(datos$PISTAS<3, "POSITIVA", "NEGATIVA")
datos["LE"] = ifelse(datos$LIDERAZGO=="SI", "POSITIVA", "NEGATIVA")
datos["PE"] = ifelse(datos$PRUEBA_EXTRA=="SI", "`POSITIVA", "NEGATIVA" )
library(e1071)
#Utilizando solo información de sala.
df_a = datos[,c("SA","VP")]
df_a
Y_a = df_a["VP"]
X_a = df_a["SA"]
m_a = naiveBayes(X_a,Y_a)
df_a
m_a = naiveBayes(X_a,Y_a)
df_a = datos[,c("SA","VP")]
df_a
Y_a = df_a[,"VP"]
X_a = df_a[,"SA"]
m_a = naiveBayes(X_a,Y_a)
pred_a = predict(m_a, df_a)
real_a=df_a
nconjunta_a = table(pred_a, real_a)
#Utilizando solo información de sala.
df_a = datos[,c("SA","VP")]
df_a
Y_a = df_a[,"VP"]
X_a = df_a[,"SA"]
m_a = naiveBayes(X_a,Y_a)
pred_a = predict(m_a, df_a[,"SA"])
real_a=df_a$VP
nconjunta_a = table(pred_a, real_a)
nSA_a = table(df_a)
#a)Probabilidad de que acierte en la predcción de valoración positiva dado que el grupo ha tenido una valoración positiva.
nconjunta_a["POSITIVA","POSITIVA"]/nSA_a["POSITIVA"]
#b)Probabilidad de que acierte en la predcción de valoración positiva dado que el grupo ha tenido una valoración positiva.
nconjunta_a["NEGATIVA","NEGATIVA"]/nSA_a["NEGATIVA"]
#d)Probabilidad de que el grupo obtenga una valoración positiva dado que el clasificador predice que va a ser negativa.
n_a= nconjunta_a["NEGATIVA", "NEGATIVA"] + nconjunta_a["NEGATIVA", "POSITIVA"]
nconjunta_a["NEGATIVA","POSITIVA"]/n_a
#c)Probabilidad de que el grupo obtenga una valoración positiva dado que el clasificador predice que va a ser positiva.
n_a2= nconjunta_a["POSITIVA", "POSITIVA"] + nconjunta_a["POSITIVA", "NEGATIVA"]
nconjunta_a["POSITIVA","POSITIVA"]/n_a2
#Utilizando solo información de sala.
df_a = datos[,c("SA","VP")]
df_a
Y_a = df_a[,"VP"]
X_a = df_a[,"SA"]
m_a = naiveBayes(X_a,Y_a)
pred_a = predict(m_a, df_a[,"SA"])
real_a=df_a$VP
nconjunta_a = table(pred_a, real_a)
nVP_a = table(df_a$VP)
#a)Probabilidad de que acierte en la predcción de valoración positiva dado que el grupo ha tenido una valoración positiva.
nconjunta_a["POSITIVA","POSITIVA"]/nSA_a["POSITIVA"]
#b)Probabilidad de que acierte en la predcción de valoración positiva dado que el grupo ha tenido una valoración positiva.
nconjunta_a["NEGATIVA","NEGATIVA"]/nSA_a["NEGATIVA"]
#d)Probabilidad de que el grupo obtenga una valoración positiva dado que el clasificador predice que va a ser negativa.
n_a= nconjunta_a["NEGATIVA", "NEGATIVA"] + nconjunta_a["NEGATIVA", "POSITIVA"]
nconjunta_a["NEGATIVA","POSITIVA"]/n_a
#c)Probabilidad de que el grupo obtenga una valoración positiva dado que el clasificador predice que va a ser positiva.
n_a2= nconjunta_a["POSITIVA", "POSITIVA"] + nconjunta_a["POSITIVA", "NEGATIVA"]
nconjunta_a["POSITIVA","POSITIVA"]/n_a2
nconjunta_a = table(pred_a, real_a)
nVP_a = table(df_a$VP)
#a)Probabilidad de que acierte en la predcción de valoración positiva dado que el grupo ha tenido una valoración positiva.
nconjunta_a["POSITIVA","POSITIVA"]/nVP_a["POSITIVA"]
#b)Probabilidad de que acierte en la predcción de valoración positiva dado que el grupo ha tenido una valoración positiva.
nconjunta_a["NEGATIVA","NEGATIVA"]/nVP_a["NEGATIVA"]
#d)Probabilidad de que el grupo obtenga una valoración positiva dado que el clasificador predice que va a ser negativa.
n_a= nconjunta_a["NEGATIVA", "NEGATIVA"] + nconjunta_a["NEGATIVA", "POSITIVA"]
nconjunta_a["NEGATIVA","POSITIVA"]/n_a
#c)Probabilidad de que el grupo obtenga una valoración positiva dado que el clasificador predice que va a ser positiva.
n_a2= nconjunta_a["POSITIVA", "POSITIVA"] + nconjunta_a["POSITIVA", "NEGATIVA"]
nconjunta_a["POSITIVA","POSITIVA"]/n_a2
n_a
nconjunta_a
nconjunta_a["NEGATIVA","POSITIVA"]
df = datos[,c("SA","VMB","VH1","VP")]
df
#Variable final
Y = df[,"VP"]
#Variable que se utiliza para predecir
X = df[,c("VH1","VMB","SA")]
m = naiveBayes(X,Y)
# Extrae predicciones para evaluar el clasificador
pred = predict(m, df[,c("VH1","VMB","SA")])
# Evaluar capacidad de prediccion del modelo
real=df$VP
nconjunta = table(pred, real)
nVP = table(df$VP)
#a)Probabilidad de que acierte en la predicción de valoración positiva dado que el grupo ha tenido una valoración positiva.
nconjunta["POSITIVA","POSITIVA"]/nVP["POSITIVA"]
#b)Probabilidad de que acierte en la predicción de valoración negativa dado que el grupo ha tenido una valoración negativa.
nconjunta["NEGATIVA","NEGATIVA"]/nVP["NEGATIVA"]
#d)Probabilidad de que el grupo obtenga una valoración positiva dado que el clasificador predice que va a ser negativa.
n= nconjunta["NEGATIVA", "NEGATIVA"] + nconjunta["NEGATIVA", "POSITIVA"]
nconjunta["NEGATIVA","POSITIVA"]/n
#c)Probabilidad de que el grupo obtenga una valoración positiva dado que el clasificador predice que va a ser positiva.
n_2= nconjunta["POSITIVA", "POSITIVA"] + nconjunta["POSITIVA", "NEGATIVA"]
nconjunta["POSITIVA","POSITIVA"]/n_2
#a)Probabilidad de que acierte en la predicción de valoración positiva dado que el grupo ha tenido una valoración positiva.
nconjunta["POSITIVA","POSITIVA"]/nVP["POSITIVA"]
#b)Probabilidad de que acierte en la predicción de valoración negativa dado que el grupo ha tenido una valoración negativa.
nconjunta["NEGATIVA","NEGATIVA"]/nVP["NEGATIVA"]
#d)Probabilidad de que el grupo obtenga una valoración positiva dado que el clasificador predice que va a ser negativa.
n= nconjunta["NEGATIVA", "NEGATIVA"] + nconjunta["NEGATIVA", "POSITIVA"]
nconjunta["NEGATIVA","POSITIVA"]/n
#c)Probabilidad de que el grupo obtenga una valoración positiva dado que el clasificador predice que va a ser positiva.
n_2= nconjunta["POSITIVA", "POSITIVA"] + nconjunta["POSITIVA", "NEGATIVA"]
nconjunta["POSITIVA","POSITIVA"]/n_2
df1 = datos[,c("SA","VMB","VH1","VT","VP")]
df1
Y1 = df1[,"VP"]
X1 = df1[,c("VH1","VMB","VT","SA")]
m1 = naiveBayes(X1,Y1)
pred1 = predict(m1, df1[,c("VH1","VMB","VT","SA")])
real1=df1$VP
nconjunta1 = table(pred1, real1)
nVP1 = table(df1$VP)
#a)Probabilidad de que acierte en la predcción de valoración positiva dado que el grupo ha tenido una valoración positiva.
nconjunta1["POSITIVA","POSITIVA"]/nVP1["POSITIVA"]
#b)Probabilidad de que acierte en la predcción de valoración positiva dado que el grupo ha tenido una valoración positiva.
nconjunta1["NEGATIVA","NEGATIVA"]/nVP1["NEGATIVA"]
#d)Probabilidad de que el grupo obtenga una valoración positiva dado que el clasificador predice que va a ser negativa.
n1= nconjunta1["NEGATIVA", "NEGATIVA"] + nconjunta1["NEGATIVA", "POSITIVA"]
nconjunta1["NEGATIVA","POSITIVA"]/n1
#c)Probabilidad de que el grupo obtenga una valoración positiva dado que el clasificador predice que va a ser positiva.
n1_2= nconjunta1["POSITIVA", "POSITIVA"] + nconjunta1["POSITIVA", "NEGATIVA"]
nconjunta1["POSITIVA","POSITIVA"]/n1_2
#a)Probabilidad de que acierte en la predcción de valoración positiva dado que el grupo ha tenido una valoración positiva.
nconjunta1["POSITIVA","POSITIVA"]/nVP1["POSITIVA"]
#b)Probabilidad de que acierte en la predcción de valoración positiva dado que el grupo ha tenido una valoración positiva.
nconjunta1["NEGATIVA","NEGATIVA"]/nVP1["NEGATIVA"]
#d)Probabilidad de que el grupo obtenga una valoración positiva dado que el clasificador predice que va a ser negativa.
n1= nconjunta1["NEGATIVA", "NEGATIVA"] + nconjunta1["NEGATIVA", "POSITIVA"]
nconjunta1["NEGATIVA","POSITIVA"]/n1
#c)Probabilidad de que el grupo obtenga una valoración positiva dado que el clasificador predice que va a ser positiva.
n1_2= nconjunta1["POSITIVA", "POSITIVA"] + nconjunta1["POSITIVA", "NEGATIVA"]
nconjunta1["POSITIVA","POSITIVA"]/n1_2
df2 = datos[,c("SA","VMB","VH1","VT","VNP","LE","VP")]
df2
Y2 = df2[,"VP"]
X2 = df2[,c("VH1","VMB","VT","VNP","LE","SA")]
m2 = naiveBayes(X2,Y2)
pred2 = predict(m2, df2[,c("VH1","VMB","VT","VNP","LE","SA")])
real2=df2$VP
nconjunta2 = table(pred2, real2)
nVP2 = table(df2$VP)
#a)Probabilidad de que acierte en la predcción de valoración positiva dado que el grupo ha tenido una valoración positiva.
nconjunta2["POSITIVA","POSITIVA"]/nVP2["POSITIVA"]
#b)Probabilidad de que acierte en la predcción de valoración positiva dado que el grupo ha tenido una valoración positiva.
nconjunta2["NEGATIVA","NEGATIVA"]/nVP2["NEGATIVA"]
#d)Probabilidad de que el grupo obtenga una valoración positiva dado que el clasificador predice que va a ser negativa.
n2= nconjunta2["NEGATIVA", "NEGATIVA"] + nconjunta2["NEGATIVA", "POSITIVA"]
nconjunta2["NEGATIVA","POSITIVA"]/n2
#c)Probabilidad de que el grupo obtenga una valoración positiva dado que el clasificador predice que va a ser positiva.
n2_2= nconjunta2["POSITIVA", "POSITIVA"] + nconjunta2["POSITIVA", "NEGATIVA"]
nconjunta2["POSITIVA","POSITIVA"]/n2_2
source("~/GitHub/Estad-stica-pr-cticas/Practica 2.R")
install.packages("e1071")
install.packages("e1071")
datos <- read.csv('datosB2.csv', sep= ";", dec= ",")
datos <- datos[!is.na(datos$TOTAL_SALA),]
datos
#Crea nuevas variables categóricas
datos["VP"] = ifelse(datos$PUNTUACION>2500, "POSITIVA", "NEGATIVA")
datos["SA"] = ifelse(datos$SALA=="A", "POSITIVA", "NEGATIVA")
datos["VH1"] = ifelse(datos$HABITACION1<13, "POSITIVA", "NEGATIVA")
datos["VT"] = ifelse(datos$TOTAL_SALA<50,"POSITIVA", "NEGATIVA")
datos["VMB"] = ifelse(datos$MIEMBROS>5 & datos$MIEMBROS<3, "NEGATIVA", "POSITIVA")
datos["VNP"] = ifelse(datos$PISTAS<3, "POSITIVA", "NEGATIVA")
datos["LE"] = ifelse(datos$LIDERAZGO=="SI", "POSITIVA", "NEGATIVA")
datos["PE"] = ifelse(datos$PRUEBA_EXTRA=="SI", "`POSITIVA", "NEGATIVA" )
library(e1071)
#Utilizando solo información de sala.
df_a = datos[,c("SA","VP")]
X_a = df_a[,"SA"]
df_a
Y_a = df_a[,"VP"]
m_a = naiveBayes(X_a,Y_a)
pred_a = predict(m_a, df_a[,"SA"])
real_a=df_a$VP
nconjunta_a = table(pred_a, real_a)
nVP_a = table(df_a$VP)
#a)Probabilidad de que acierte en la predcción de valoración positiva dado que el grupo ha tenido una valoración positiva.
nconjunta_a["POSITIVA","POSITIVA"]/nVP_a["POSITIVA"]
#b)Probabilidad de que acierte en la predcción de valoración positiva dado que el grupo ha tenido una valoración positiva.
nconjunta_a["NEGATIVA","NEGATIVA"]/nVP_a["NEGATIVA"]
#d)Probabilidad de que el grupo obtenga una valoración positiva dado que el clasificador predice que va a ser negativa.
n_a= nconjunta_a["NEGATIVA", "NEGATIVA"] + nconjunta_a["NEGATIVA", "POSITIVA"]
nconjunta_a["NEGATIVA","POSITIVA"]/n_a
#c)Probabilidad de que el grupo obtenga una valoración positiva dado que el clasificador predice que va a ser positiva.
n_a2= nconjunta_a["POSITIVA", "POSITIVA"] + nconjunta_a["POSITIVA", "NEGATIVA"]
nconjunta_a["POSITIVA","POSITIVA"]/n_a2
nconjunta_a
#Utilizando información de sala, número de miembros, habitación 1, y tiempo total.
df1 = datos[,c("SA","VMB","VH1","VT","VP")]
#e)Probabilidad de que el clasificador acierte en su predición.
(nconjunta_a["NEGATIVA","NEGATIVA"]+nconjunta_a["POSITIVA","POSITIVA"])/(nconjunta_a["NEGATIVA","NEGATIVA"]+nconjunta_a["POSITIVA","POSITIVA"]+nconjunta_a["NEGATIVA","POSITIVA"]+nconjunta_a["POSITIVA","NEGATIVA"])
nconjunta_a["POSITIVA","POSITIVA"]/n_a
n_a= nconjunta_a["POSITIVA", "POSITIVA"] + nconjunta_a["POSITIVA", "NEGATIVA"]
nconjunta_a["POSITIVA","POSITIVA"]/n_a
real_b=df$VP
source("~/GitHub/Estad-stica-pr-cticas/Practica 2.R")
install.packages("e1071")
source("~/GitHub/Estad-stica-pr-cticas/Practica 2.R")
datos <- read.csv('datosB2.csv', sep= ";", dec= ",")
datos <- datos[!is.na(datos$TOTAL_SALA),]
datos
source("C:/Users/Acer/Downloads/ejemplos_contrastes.R")
source("~/GitHub/Estad-stica-pr-cticas/B2-2_p3.R")
install.packages("e1071")
datos <- read.csv('datosB2.csv', sep= ";", dec= ",")
datos <- datos[!is.na(datos$TOTAL_SALA),]
datos
#Crea nuevas variables categóricas
datos["VP"] = ifelse(datos$PUNTUACION>2500, "POSITIVA", "NEGATIVA")
datos["SA"] = ifelse(datos$SALA=="A", "POSITIVA", "NEGATIVA")
datos["VH1"] = ifelse(datos$HABITACION1<13, "POSITIVA", "NEGATIVA")
datos["VT"] = ifelse(datos$TOTAL_SALA<50,"POSITIVA", "NEGATIVA")
datos["VMB"] = ifelse(datos$MIEMBROS>5 & datos$MIEMBROS<3, "NEGATIVA", "POSITIVA")
datos["VNP"] = ifelse(datos$PISTAS<3, "POSITIVA", "NEGATIVA")
datos["LE"] = ifelse(datos$LIDERAZGO=="SI", "POSITIVA", "NEGATIVA")
datos["PE"] = ifelse(datos$PRUEBA_EXTRA=="SI", "`POSITIVA", "NEGATIVA" )
library(e1071)
#Utilizando solo información de sala.
# Seleciona las variables categóricas para el modelo
df_a = datos[,c("SA","VP")]
df_a
#Variable final
Y_a = df_a[,"VP"]
#Variable que se utiliza para predecir
X_a = df_a[,"SA"]
m_a = naiveBayes(X_a,Y_a)
# Extrae predicciones para evaluar el clasificador
pred_a = predict(m_a, df_a[,"SA"])
# Evaluar capacidad de prediccion del modelo
real_a=df_a$VP
nconjunta_a = table(pred_a, real_a)
nVP_a = table(df_a$VP)
#a)Probabilidad de que acierte en la predcción de valoración positiva dado que el grupo ha tenido una valoración positiva.
nconjunta_a["POSITIVA","POSITIVA"]/nVP_a["POSITIVA"]
#b)Probabilidad de que acierte en la predcción de valoración positiva dado que el grupo ha tenido una valoración positiva.
nconjunta_a["NEGATIVA","NEGATIVA"]/nVP_a["NEGATIVA"]
#c)Probabilidad de que el grupo obtenga una valoración positiva dado que el clasificador predice que va a ser positiva.
n_a= nconjunta_a["POSITIVA", "POSITIVA"] + nconjunta_a["POSITIVA", "NEGATIVA"]
nconjunta_a["POSITIVA","POSITIVA"]/n_a
#d)Probabilidad de que el grupo obtenga una valoración positiva dado que el clasificador predice que va a ser negativa.
n_a2= nconjunta_a["NEGATIVA", "NEGATIVA"] + nconjunta_a["NEGATIVA", "POSITIVA"]
nconjunta_a["NEGATIVA","POSITIVA"]/n_a2
#e)Probabilidad de que el clasificador acierte en su predición.
(nconjunta_a["NEGATIVA","NEGATIVA"]+nconjunta_a["POSITIVA","POSITIVA"])/(nconjunta_a["NEGATIVA","NEGATIVA"]+nconjunta_a["POSITIVA","POSITIVA"]+nconjunta_a["NEGATIVA","POSITIVA"]+nconjunta_a["POSITIVA","NEGATIVA"])
#Utilizando información de sala, número de miembros y habitación 1.
df_b = datos[,c("SA","VMB","VH1","VP")]
df_b
Y_b = df_b[,"VP"]
X_b = df_b[,c("VH1","VMB","SA")]
m_b = naiveBayes(X_b,Y_b)
pred_b = predict(m_b, df_b[,c("VH1","VMB","SA")])
real_b=df$VP
nconjunta_b = table(pred_b, real_b)
nVP_b = table(df$VP)
#a)Probabilidad de que acierte en la predicción de valoración positiva dado que el grupo ha tenido una valoración positiva.
nconjunta_b["POSITIVA","POSITIVA"]/nVP_b["POSITIVA"]
#b)Probabilidad de que acierte en la predicción de valoración negativa dado que el grupo ha tenido una valoración negativa.
nconjunta_b["NEGATIVA","NEGATIVA"]/nVP_b["NEGATIVA"]
#c)Probabilidad de que el grupo obtenga una valoración positiva dado que el clasificador predice que va a ser positiva.
n_b= nconjunta_b["POSITIVA", "POSITIVA"] + nconjunta_b["POSITIVA", "NEGATIVA"]
nconjunta_b["POSITIVA","POSITIVA"]/n_b
#d)Probabilidad de que el grupo obtenga una valoración positiva dado que el clasificador predice que va a ser negativa.
n_b2= nconjunta_b["NEGATIVA", "NEGATIVA"] + nconjunta_b["NEGATIVA", "POSITIVA"]
nconjunta_b["NEGATIVA","POSITIVA"]/n_b2
#e)Probabilidad de que el clasificador acierte en su predición.
(nconjunta_b["NEGATIVA","NEGATIVA"]+nconjunta_b["POSITIVA","POSITIVA"])/(nconjunta_b["NEGATIVA","NEGATIVA"]+nconjunta_b["POSITIVA","POSITIVA"]+nconjunta_b["NEGATIVA","POSITIVA"]+nconjunta_b["POSITIVA","NEGATIVA"])
#Utilizando información de sala, número de miembros, habitación 1, y tiempo total.
df_c = datos[,c("SA","VMB","VH1","VT","VP")]
df_c
Y_c = df_c[,"VP"]
X_c = df_c[,c("VH1","VMB","VT","SA")]
m_c = naiveBayes(X_c,Y_c)
pred_c = predict(m_c, df_c[,c("VH1","VMB","VT","SA")])
real_c=df1$VP
nconjunta_c = table(pred_c, real_c)
nVP_c = table(df_c$VP)
#a)Probabilidad de que acierte en la predcción de valoración positiva dado que el grupo ha tenido una valoración positiva.
nconjunta_c["POSITIVA","POSITIVA"]/nVP_c["POSITIVA"]
#b)Probabilidad de que acierte en la predcción de valoración positiva dado que el grupo ha tenido una valoración positiva.
nconjunta_c["NEGATIVA","NEGATIVA"]/nVP_c["NEGATIVA"]
#c)Probabilidad de que el grupo obtenga una valoración positiva dado que el clasificador predice que va a ser positiva.
n_c= nconjunta_c["POSITIVA", "POSITIVA"] + nconjunta_c["POSITIVA", "NEGATIVA"]
nconjunta_c["POSITIVA","POSITIVA"]/n_c
#d)Probabilidad de que el grupo obtenga una valoración positiva dado que el clasificador predice que va a ser negativa.
n_c2= nconjunta_c["NEGATIVA", "NEGATIVA"] + nconjunta_c["NEGATIVA", "POSITIVA"]
nconjunta_c["NEGATIVA","POSITIVA"]/n_c2
#e)Probabilidad de que el clasificador acierte en su predición.
(nconjunta_c["NEGATIVA","NEGATIVA"]+nconjunta_c["POSITIVA","POSITIVA"])/(nconjunta_c["NEGATIVA","NEGATIVA"]+nconjunta_c["POSITIVA","POSITIVA"]+nconjunta_c["NEGATIVA","POSITIVA"]+nconjunta_c["POSITIVA","NEGATIVA"])
#Utilizando toda la información disponible de sala, número de miembros, tiempos, número de pistas y liderazgo
df_d = datos[,c("SA","VMB","VH1","VT","VNP","LE","VP")]
df_d
Y_d = df_d[,"VP"]
X_d = df_d[,c("VH1","VMB","VT","VNP","LE","SA")]
m_d = naiveBayes(X_d,Y_d)
pred_d = predict(m_d, df_d[,c("VH1","VMB","VT","VNP","LE","SA")])
real_d=df2$VP
nconjunta_d = table(pred_d, real_d)
nVP_d = table(df_d$VP)
#a)Probabilidad de que acierte en la predcción de valoración positiva dado que el grupo ha tenido una valoración positiva.
nconjunta_d["POSITIVA","POSITIVA"]/nVP_d["POSITIVA"]
#b)Probabilidad de que acierte en la predcción de valoración positiva dado que el grupo ha tenido una valoración positiva.
nconjunta_d["NEGATIVA","NEGATIVA"]/nVP_d["NEGATIVA"]
#c)Probabilidad de que el grupo obtenga una valoración positiva dado que el clasificador predice que va a ser positiva.
n_d= nconjunta_d["POSITIVA", "POSITIVA"] + nconjunta_d["POSITIVA", "NEGATIVA"]
nconjunta_d["POSITIVA","POSITIVA"]/n_d
#d)Probabilidad de que el grupo obtenga una valoración positiva dado que el clasificador predice que va a ser negativa.
n_d2= nconjunta_d["NEGATIVA", "NEGATIVA"] + nconjunta_d["NEGATIVA", "POSITIVA"]
nconjunta_d["NEGATIVA","POSITIVA"]/n_d2
#e)Probabilidad de que el clasificador acierte en su predición.
(nconjunta_d["NEGATIVA","NEGATIVA"]+nconjunta_d["POSITIVA","POSITIVA"])/(nconjunta_d["NEGATIVA","NEGATIVA"]+nconjunta_d["POSITIVA","POSITIVA"]+nconjunta_d["NEGATIVA","POSITIVA"]+nconjunta_d["POSITIVA","NEGATIVA"])
nconjunta_a["NEGATIVA","NEGATIVA"]/nVP_a["NEGATIVA"]
nconjunta_a["POSITIVA","POSITIVA"]/nVP_a["POSITIVA"]
nconjunta_a["NEGATIVA","NEGATIVA"]/nVP_a["NEGATIVA"]
n_a= nconjunta_a["POSITIVA", "POSITIVA"] + nconjunta_a["POSITIVA", "NEGATIVA"]
nconjunta_a["POSITIVA","POSITIVA"]/n_a
source("~/GitHub/Estad-stica-pr-cticas/B2-2_p3.R")
datos <- read.csv('datosB2.csv', sep= ";", dec= ",")
datos <- datos[!is.na(datos$TOTAL_SALA),]
datos
datos["VP"] = ifelse(datos$PUNTUACION>2500, "POSITIVA", "NEGATIVA")
datos["SA"] = ifelse(datos$SALA=="A", "POSITIVA", "NEGATIVA")
datos["VH1"] = ifelse(datos$HABITACION1<13, "POSITIVA", "NEGATIVA")
datos["VT"] = ifelse(datos$TOTAL_SALA<50,"POSITIVA", "NEGATIVA")
datos["VMB"] = ifelse(datos$MIEMBROS>5 & datos$MIEMBROS<3, "NEGATIVA", "POSITIVA")
datos["VNP"] = ifelse(datos$PISTAS<3, "POSITIVA", "NEGATIVA")
datos["LE"] = ifelse(datos$LIDERAZGO=="SI", "POSITIVA", "NEGATIVA")
datos["PE"] = ifelse(datos$PRUEBA_EXTRA=="SI", "`POSITIVA", "NEGATIVA" )
#test independencia
"1. Comprobar si el tiempo total es independiente de las demás variables (usar datos
agrupados de la práctica 2)."
df= datos[,c("VT","VP","SA", "VH1", "VT", "VMB", "VNP", "LE", "PE")]
VT= df[,"VT"]
VP= df[,"VP"]
SA= df[,"SA"]
tabla=table(VT,SA)
t1 = chisq.test(tabla)
t1$p.value
datos <- read.csv('datosB2.csv', sep= ";", dec= ",")
datos <- datos[!is.na(datos$TOTAL_SALA),]
datos["VP"] = ifelse(datos$PUNTUACION>2500, "POSITIVA", "NEGATIVA")
datos["SA"] = ifelse(datos$SALA=="A", "POSITIVA", "NEGATIVA")
datos["VH1"] = ifelse(datos$HABITACION1<13, "POSITIVA", "NEGATIVA")
datos["VT"] = ifelse(datos$TOTAL_SALA<50,"POSITIVA", "NEGATIVA")
datos["VMB"] = ifelse(datos$MIEMBROS>5 & datos$MIEMBROS<3, "NEGATIVA", "POSITIVA")
datos["VNP"] = ifelse(datos$PISTAS<3, "POSITIVA", "NEGATIVA")
datos["LE"] = ifelse(datos$LIDERAZGO=="SI", "POSITIVA", "NEGATIVA")
datos["PE"] = ifelse(datos$PRUEBA_EXTRA=="SI", "`POSITIVA", "NEGATIVA" )
#test independencia
"1. Comprobar si el tiempo total es independiente de las demás variables (usar datos
agrupados de la práctica 2)."
df= datos[,c("VT","VP","SA", "VH1", "VMB", "VNP", "LE", "PE")]
VT= df[,"VT"]
VP= df[,"VP"]
SA= df[,"SA"]
VH1= df[,"VH1"]
VMB= df[,"VMB"]
VNP= df[,"VNP"]
LE= df[,"LE"]
PE= df[,"PE"]
tabla1=table(VT,VP,SA,VH1,VMB)
t1 = chisq.test(tabla)
t1$p.value
tabla1
t1$p.value
df= datos[,c("VT","VP","SA", "VH1", "VMB", "VNP", "LE", "PE")]
VT= df[,"VT"]
VP= df[,"VP"]
SA= df[,"SA"]
VH1= df[,"VH1"]
VMB= df[,"VMB"]
VNP= df[,"VNP"]
LE= df[,"LE"]
PE= df[,"PE"]
tabla1=table(VT,VP)
t1 = chisq.test(tabla)
t1$p.value
chisq.test(tabla)
tabla2=table(VT,SA)
t2 = chisq.test(tabla)
t2$p.value
t2$p.value
t1$p.value
tabla1=table(VT,VP)
t1 = chisq.test(tabla1)
t1$p.value
tabla2=table(VT,SA)
t2 = chisq.test(tabla2)
t2$p.value
tabla3=table(VT,VH1)
t3 = chisq.test(tabla3)
t3$p.value
tabla4=table(VT,VMB)
t4 = chisq.test(tabla4)
t4$p.value
tabla1=table(VT,VP)
t1 = chisq.test(tabla1)
t1$p.value
tabla1=table(VT,VP)
t1 = chisq.test(tabla1)
t1$p.value
tabla2=table(VT,SA)
t2 = chisq.test(tabla2)
t2$p.value
tabla3=table(VT,VH1)
t3 = chisq.test(tabla3)
t3$p.value
tabla4=table(VT,VMB)
t4 = chisq.test(tabla4)
t4$p.value
tabla5=table(VT,VNP)
t5 = chisq.test(tabla5)
t5$p.value
tabla6=table(VT,LE)
t6 = chisq.test(tabla6)
t6$p.value
tabla7=table(VT,PE)
t7 = chisq.test(tabla7)
t7$p.value
t1$p.value
t2$p.value
t3$p.value
t4$p.value
tabla1=table(VT,VP)
t1 = chisq.test(tabla1)
t1$p.value
tabla2=table(VT,SA)
t2 = chisq.test(tabla2)
t2$p.value
t5$p.value
t6$p.value
t7$p.value
source("~/GitHub/Estad-stica-pr-cticas/B2-2_p3.R")
