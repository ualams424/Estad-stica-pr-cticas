datos<-read.csv("https://github.com/ualams424/Estad-stica-pr-cticas/blob/main/datosB2.csv", sep = ";", dec= ",")
datos <- read.csv('datosB2.csv', sep= ";", dec= ",")
datos <- datos[!is.na(datos$TOTAL_SALA),]
datos
source("~/GitHub/Estad-stica-pr-cticas/Practica 2.R")
datos <- read.csv('datosB2.csv', sep= ";", dec= ",")
datos <- datos[!is.na(datos$TOTAL_SALA),]
datos
source("~/GitHub/Estad-stica-pr-cticas/Practica 2.R")
install.packages("e1071")
datos <- read.csv('datosB2.csv', sep= ";", dec= ",")
datos
datos["VNP"] = ifelse(datos$PISTAS=<2, "POSITIVA", "NEGATIVA")
datos["VNP"] = ifelse(datos$PISTAS<3, "POSITIVA", "NEGATIVA")
datos["VNP"]
source("~/GitHub/Estad-stica-pr-cticas/Practica 2.R")
library(e1071)
df = datos[,c("VP","VT","SA")]
df
Y = df[,"SA"]
X = df[,c("VP","VT")]
Y
m = naiveBayes(X,Y)
m
df = datos[,c("VH1","VMB","SA")]
df
Y = df[,"SA"]
X = df[,c("VH1","VMB")]
m = naiveBayes(X,Y)
pred = predict(m, df[,c("VH1","VMB")])
pred
df = datos[,c("VH1","VMB","SA")]
df
Y = df[,"SA"]
X = df[,c("VH1","VMB")]
m = naiveBayes(X,Y)
m
datos["VP"] = ifelse(datos$PUNTUACION>2500, "POSITIVA", "NEGATIVA")
datos["SA"] = ifelse(datos$SALA=="A", "POSITIVA", "NEGATIVA")
datos["VH1"] = ifelse(datos$HABITACION1<13, "POSITIVA", "NEGATIVA")
datos["VT"] = ifelse(datos$TOTAL_SALA<50,"POSITIVA", "NEGATIVA")
datos["VMB"] = ifelse(datos$MIEMBROS>5 & datos$MIEMBROS<3, "NEGATIVA", "POSITIVA")
datos["VNP"] = ifelse(datos$PISTAS<3, "POSITIVA", "NEGATIVA")
datos["LE"] = ifelse(datos$LIDERAZGO=="SI", "POSITIVA", "NEGATIVA")
datos["PE"] = ifelse(datos$PRUEBA_EXTRA=="SI", "`POSITIVA", "NEGATIVA" )
library(e1071)
df = datos[,c("VH1","VMB","SA")]
df
Y = df[,"SA"]
X = df[,c("VH1","VMB")]
m = naiveBayes(X,Y)
m
df = datos[,c("VH1","VMB","VP")]
df
#Variable final
Y = df[,"VP"]
#Variable que se utiliza para predecir
X = df[,c("VH1","VMB")]
m = naiveBayes(X,Y)
pred = predict(m, df[,c("VH1","VMB")])
pred
real=df$VP
nconjunta = table(pred, real)
nconjunta
nS = table(df$S)
nS
nconjunta["POSITIVA","POSITIVA"]/nS["POSITIVA"]
nconjunta = table(pred, real)
nS = table(df$S)
nconjunta["POSITIVA","POSITIVA"]/nS["POSITIVA"]
source("~/GitHub/Estad-stica-pr-cticas/Practica 2.R")
install.packages("e1071")
install.packages("e1071")
datos <- read.csv('datosB2.csv', sep= ";", dec= ",")
datos <- datos[!is.na(datos$TOTAL_SALA),]
datos
#Crea nuevas variables categóricas
datos["VP"] = ifelse(datos$PUNTUACION>2500, "POSITIVA", "NEGATIVA")
datos["SA"] = ifelse(datos$SALA=="A", "POSITIVA", "NEGATIVA")
datos["VH1"] = ifelse(datos$HABITACION1<13, "POSITIVA", "NEGATIVA")
datos["VT"] = ifelse(datos$TOTAL_SALA<50,"POSITIVA", "NEGATIVA")
datos["VMB"] = ifelse(datos$MIEMBROS>5 & datos$MIEMBROS<3, "NEGATIVA", "POSITIVA")
datos["VNP"] = ifelse(datos$PISTAS<3, "POSITIVA", "NEGATIVA")
datos["LE"] = ifelse(datos$LIDERAZGO=="SI", "POSITIVA", "NEGATIVA")
datos["PE"] = ifelse(datos$PRUEBA_EXTRA=="SI", "`POSITIVA", "NEGATIVA" )
library(e1071)
df = datos[,c("VH1","VMB","VP")]
df
#Variable final
Y = df[,"VP"]
#Variable que se utiliza para predecir
X = df[,c("VH1","VMB")]
m = naiveBayes(X,Y)
pred = predict(m, df[,c("VH1","VMB")])
real=df$VP
nconjunta = table(pred, real)
nS = table(df$S)
nconjunta["POSITIVA","POSITIVA"]/nS["POSITIVA"]
install.packages("e1071")
install.packages("e1071")
datos <- read.csv('datosB2.csv', sep= ";", dec= ",")
datos <- datos[!is.na(datos$TOTAL_SALA),]
datos
#Crea nuevas variables categóricas
datos["VP"] = ifelse(datos$PUNTUACION>2500, "POSITIVA", "NEGATIVA")
datos["SA"] = ifelse(datos$SALA=="A", "POSITIVA", "NEGATIVA")
datos["VH1"] = ifelse(datos$HABITACION1<13, "POSITIVA", "NEGATIVA")
datos["VT"] = ifelse(datos$TOTAL_SALA<50,"POSITIVA", "NEGATIVA")
datos["VMB"] = ifelse(datos$MIEMBROS>5 & datos$MIEMBROS<3, "NEGATIVA", "POSITIVA")
datos["VNP"] = ifelse(datos$PISTAS<3, "POSITIVA", "NEGATIVA")
datos["LE"] = ifelse(datos$LIDERAZGO=="SI", "POSITIVA", "NEGATIVA")
datos["PE"] = ifelse(datos$PRUEBA_EXTRA=="SI", "`POSITIVA", "NEGATIVA" )
library(e1071)
df = datos[,c("VH1","VMB","VP")]
df
#Variable final
Y = df[,"VP"]
#Variable que se utiliza para predecir
X = df[,c("VH1","VMB")]
m = naiveBayes(X,Y)
pred = predict(m, df[,c("VH1","VMB")])
real=df$VP
nconjunta = table(pred, real)
nS = table(df$S)
nconjunta["POSITIVA","POSITIVA"]/nS["POSITIVA"]
nS
pred = predict(m, df[,c("VH1","VMB")])
real=df$VP
nconjunta = table(pred, real)
nS = table(df$VP)
nconjunta["POSITIVA","POSITIVA"]/nS["POSITIVA"]
nconjunta
nconjunta["NEGATIVA","NEGATIVA"]/nS["NEGATIVA"]
nconjunta = table(real, pred)
nS = table(df$VP)
nconjunta["POSITIVA","POSITIVA"]/nS["POSITIVA"]
nconjunta["NEGATIVA","NEGATIVA"]/nS["NEGATIVA"]
nconjunta
n= nconjunta["NEGATIVA", "NEGATIVA"] + nconjunta["NEGATIVA", "POSITIVA"]
nconjunta["NEGATIVA","NEGATIVA"]/n
pred = predict(m, df[,c("VH1","VMB")])
real=df$VP
nconjunta = table(pred, real)
nVP = table(df$VP)
nconjunta
nconjunta
n
n= nconjunta["NEGATIVA", "NEGATIVA"] + nconjunta["POSITIVA", "NEGATIVA"]
n
nconjunta["POSITIVA", "NEGATIVA"]
nconjunta["NEGATIVA", "POSITIVA"]
n= nconjunta["NEGATIVA", "NEGATIVA"] + nconjunta["NEGATIVA", "POSITIVA"]
nconjunta["NEGATIVA","NEGATIVA"]/n
source("~/GitHub/Estad-stica-pr-cticas/Practica 2.R")
install.packages("e1071")
datos <- read.csv('datosB2.csv', sep= ";", dec= ",")
datos <- datos[!is.na(datos$TOTAL_SALA),]
datos
#Crea nuevas variables categóricas
datos["VP"] = ifelse(datos$PUNTUACION>2500, "POSITIVA", "NEGATIVA")
datos["SA"] = ifelse(datos$SALA=="A", "POSITIVA", "NEGATIVA")
datos["VH1"] = ifelse(datos$HABITACION1<13, "POSITIVA", "NEGATIVA")
datos["VT"] = ifelse(datos$TOTAL_SALA<50,"POSITIVA", "NEGATIVA")
datos["VMB"] = ifelse(datos$MIEMBROS>5 & datos$MIEMBROS<3, "NEGATIVA", "POSITIVA")
datos["VNP"] = ifelse(datos$PISTAS<3, "POSITIVA", "NEGATIVA")
datos["LE"] = ifelse(datos$LIDERAZGO=="SI", "POSITIVA", "NEGATIVA")
datos["PE"] = ifelse(datos$PRUEBA_EXTRA=="SI", "`POSITIVA", "NEGATIVA" )
library(e1071)
# Seleciona las variabels categóricas para el modelo
df = datos[,c("VH1","VMB","VP")]
df
#Variable final
Y = df[,"VP"]
#Variable que se utiliza para predecir
X = df[,c("VH1","VMB")]
m = naiveBayes(X,Y)
# Extrae predicciones para evaluar el clasificador
pred = predict(m, df[,c("VH1","VMB")])
# Evaluar capacidad de prediccion del modelo
real=df$VP
nconjunta = table(pred, real)
nVP = table(df$VP)
#Probabilidad de que acierte en la predcción de valoración positiva dado que el grupo ha tenido una valoración positiva.
nconjunta["POSITIVA","POSITIVA"]/nVP["POSITIVA"]
#Probabilidad de que acierte en la predcción de valoración positiva dado que el grupo ha tenido una valoración positiva.
nconjunta["NEGATIVA","NEGATIVA"]/nVP["NEGATIVA"]
nconjunta
source("~/GitHub/Estad-stica-pr-cticas/Practica 2.R")
install.packages("e1071")
